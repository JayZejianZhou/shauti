1. 字符串
	翻转字符串： s[::-1]

2. lambda function
	lambda arg1,arg2,arg3… :<表达式>

3. 最大值最小值
	float('-inf')

4. 字典
	初始化：
		domain_count = collections.defaultdict(int)
		m = {'a': 1, 'b': 2, 'c': 3, 'd': 4}
	遍历dictionary字典
		for key in record.keys():

		for key, val in row.items():
	最大key
		max_key = max(a_dictionary, key=a_dictionary.get)
	最大值
		max_value = max(a_dictionary.values())
	字典遇到自己没有的key时等于0，而list报错

5. for循环
		for count, value in enumerate(username):
    倒序
		for i in range(len(list)-1, -1, -1):	# range包前不包后

6. 列表list
	排序：
		sols.sort()
	寻找元素：
		index = mylist.index(element)
	寻找第一和最后一次出现位置
		# find the first occurance
        indl = nums.index(key)
        # find the last occurance
        nums_fl = nums[::-1]    # flip the nums
        indr = len(a_list) -1 - nums_fl.index(key)
    出栈
    	list.pop(index)
    变回字符串
    	"".join(stack)
    删除元素
    	list.remove() 有重复的话只删除第一个
    复制
    	list2 = list1[:]
    固定尺寸二维数组
    	res = [[None]*len(board[0]) for i in range(len(board))]
    消除重复
    	l1 = ['b','c','d','b','c','a','a']
		l2 = {}.fromkeys(l1).keys()



7. 字符和数字转换
	字符转数字
		ord("A")
	数字转字符
		chr(1)
 
